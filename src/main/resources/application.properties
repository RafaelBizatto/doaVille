spring.application.name=doaville

# ===================================================================
# CONFIGURAÇÃO DO SERVIDOR WEB
# ===================================================================
# Define a porta em que a aplicação vai rodar. O padrão é 8080.
server.port=8080


# ===================================================================
# CONFIGURAÇÃO DO BANCO DE DADOS (POSTGRESQL)
# ===================================================================
# URL de conexão JDBC para o seu banco de dados PostgreSQL.
# Verifique se o nome do banco 'doaville_db' está correto.
spring.datasource.url=jdbc:postgresql://localhost:5432/doaville_db

# Usuário do banco de dados. O padrão do PostgreSQL é 'postgres'.
spring.datasource.username=postgres
spring.datasource.password=root


# ===================================================================
# CONFIGURAÇÃO DO JPA/HIBERNATE
# ===================================================================
# Controla a geração do esquema do banco de dados.
# 'update': atualiza o esquema (cria tabelas/colunas) se houver mudanças nas entidades. Ideal para desenvolvimento.
# 'validate': valida se o esquema do banco corresponde às entidades.
# 'create': apaga e recria o banco toda vez. Perca de dados garantida.
# 'none': não faz nada.
spring.jpa.hibernate.ddl-auto=update

# Mostra no console os comandos SQL que o Hibernate está executando. Ótimo para depuração.
spring.jpa.show-sql=true

# Formata o SQL exibido no console para que fique mais legível.
spring.jpa.properties.hibernate.format_sql=true

# Boa prática para evitar problemas de performance e LazyInitializationException.
# Garante que os dados sejam carregados do banco dentro da camada de serviço.
spring.jpa.open-in-view=false


# ===================================================================
# CONFIGURAÇÃO DE SEGURANÇA (JWT)
# ===================================================================
# !! MUITO IMPORTANTE !! Esta é a chave secreta para assinar e validar seus tokens JWT.
# SUBSTITUA este valor por uma string longa, aleatória e segura.
# Em uma aplicação real, este valor NUNCA deve estar no código, e sim em variáveis de ambiente.
jwt.secret=mudar-para-uma-chave-secreta-muito-longa-e-segura-para-o-projeto-doaville-123456 